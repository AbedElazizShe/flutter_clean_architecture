// Mocks generated by Mockito 5.2.0 from annotations
// in domain/test/src/use_cases/get_articles_use_case_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:domain/src/models/article/article_model.dart' as _i4;
import 'package:domain/src/repository/articles_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ArticlesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockArticlesRepository extends _i1.Mock
    implements _i2.ArticlesRepository {
  MockArticlesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ArticleModel>> getMostEmailedArticles() =>
      (super.noSuchMethod(Invocation.method(#getMostEmailedArticles, []),
              returnValue:
                  Future<List<_i4.ArticleModel>>.value(<_i4.ArticleModel>[]))
          as _i3.Future<List<_i4.ArticleModel>>);
  @override
  _i3.Future<List<_i4.ArticleModel>> getMostViewedArticles() =>
      (super.noSuchMethod(Invocation.method(#getMostViewedArticles, []),
              returnValue:
                  Future<List<_i4.ArticleModel>>.value(<_i4.ArticleModel>[]))
          as _i3.Future<List<_i4.ArticleModel>>);
  @override
  _i3.Future<List<_i4.ArticleModel>> getMostSharedArticles() =>
      (super.noSuchMethod(Invocation.method(#getMostSharedArticles, []),
              returnValue:
                  Future<List<_i4.ArticleModel>>.value(<_i4.ArticleModel>[]))
          as _i3.Future<List<_i4.ArticleModel>>);
  @override
  _i3.Future<int> saveArticles(String? articles, String? type) =>
      (super.noSuchMethod(Invocation.method(#saveArticles, [articles, type]),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
  @override
  _i3.Future<List<_i4.ArticleModel>> getCachedArticles(String? type) =>
      (super.noSuchMethod(Invocation.method(#getCachedArticles, [type]),
              returnValue:
                  Future<List<_i4.ArticleModel>>.value(<_i4.ArticleModel>[]))
          as _i3.Future<List<_i4.ArticleModel>>);
}
